{"version":3,"sources":["utils/formatBalance.ts","hooks/useWeb3.ts","hooks/useContract.ts","utils/callHelpers.ts","components/layout/Container.tsx","components/layout/Page.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","components/UnlockButton.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","config/constants/index.ts","hooks/useStake.ts","hooks/useBlock.ts","config/index.ts","components/layout/Flex.tsx","components/Tags.tsx","hooks/useApprove.ts","hooks/useUnstake.ts","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Card.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","useWallet","refEth","useRef","useState","web3","setweb3","useEffect","current","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","useERC20","erc20","useCake","getCakeAddress","useRabbitMintingFarm","rabbitmintingfarm","usePancakeRabbits","pancakeRabbits","useLottery","lottery","getLotteryAddress","useMasterchef","masterChef","getMasterChefAddress","useSousChef","id","config","poolsConfig","find","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","process","approve","lpContract","masterChefContract","account","a","methods","options","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","Container","styled","div","theme","mediaQueries","sm","Page","lg","StyledSpacer","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useHarvest","farmPid","dispatch","useDispatch","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useSousHarvest","isUsingBnb","handleHarvest","updateUserPendingReward","updateUserBalance","UnlockButton","TranslateString","useI18n","connect","reset","onPresentConnectModal","useWalletModal","onClick","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","text","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","toLocaleString","farmsConfig","filter","farm","isCommunity","tokenSymbol","useSousStake","handleStake","updateUserStakedBalance","onStake","useStake","console","info","useBlock","BlockContext","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useApprove","onApprove","useSousApprove","updateUserAllowance","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","useUnstake","StyledLabel","isFinished","Label","StyledText","Text","isDisabled","color","textDisabled","Balance","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","CardTitle","Card","card","background","isActive","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","padding","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","CORE","COMMUNITY","StyledFooter","isDark","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","style","marginBottom","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","stakingTokenName","stakingTokenAddress","tokenDecimals","apy","startBlock","endBlock","userData","stakingLimit","fee","isBnbPool","stakingTokenContract","block","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","QuoteToken","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","flex","src","width","height","alt","HarvestButton","eq","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","as","textSubtle","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","f","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","mb","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/8.2eb16ca3.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { HttpProviderOptions } from 'web3-core-helpers'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the ethereum provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\r\n  const refEth = useRef(ethereum)\r\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\r\n\r\n  useEffect(() => {\r\n    if (ethereum !== refEth.current) {\r\n      setweb3(new Web3(ethereum || httpProvider))\r\n      refEth.current = ethereum\r\n    }\r\n  }, [ethereum])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import { useEffect, useState } from 'react'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { ContractOptions } from 'web3-eth-contract'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport ifo from 'config/abi/ifo.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\r\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\r\nimport lottery from 'config/abi/lottery.json'\r\nimport lotteryTicket from 'config/abi/lotteryNft.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\n\r\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\r\n  const web3 = useWeb3()\r\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\r\n\r\n  useEffect(() => {\r\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\r\n  }, [abi, address, contractOptions, web3])\r\n\r\n  return contract\r\n}\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const ifoAbi = (ifo as unknown) as AbiItem\r\n  return useContract(ifoAbi, address)\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const erc20Abi = (erc20 as unknown) as AbiItem\r\n  return useContract(erc20Abi, address)\r\n}\r\n\r\nexport const useCake = () => {\r\n  return useERC20(getCakeAddress())\r\n}\r\n\r\nexport const useRabbitMintingFarm = (address: string) => {\r\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\r\n  return useContract(rabbitMintingFarmAbi, address)\r\n}\r\n\r\nexport const usePancakeRabbits = (address: string) => {\r\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\r\n  return useContract(pancakeRabbitsAbi, address)\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const abi = (lottery as unknown) as AbiItem\r\n  return useContract(abi, getLotteryAddress())\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const abi = (lotteryTicket as unknown) as AbiItem\r\n  return useContract(abi, getLotteryTicketAddress())\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const abi = (masterChef as unknown) as AbiItem\r\n  return useContract(abi, getMasterChefAddress())\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  const abi = (rawAbi as unknown) as AbiItem\r\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\r\n}\r\n\r\nexport default useContract\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account })\r\n}\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  return masterChefContract.methods\r\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, account) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  }\r\n  return sousChefContract.methods\r\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, '0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit('0')\r\n    .send({ from: account })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, value: new BigNumber(0) })\r\n    .on('transactionHash', (tx) => {\r\n      return tx.transactionHash\r\n    })\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n  text-align: center;\r\n`\r\n\r\nexport default ModalActions\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst UnlockButton = (props) => {\r\n  const TranslateString = useI18n()\r\n  const { connect, reset } = useWallet()\r\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {TranslateString(292, 'Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport interface InputProps {\r\n  endAdornment?: React.ReactNode\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  startAdornment?: React.ReactNode\r\n  value: string\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\r\n  return (\r\n    <StyledInputWrapper>\r\n      {!!startAdornment && startAdornment}\r\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\r\n      {!!endAdornment && endAdornment}\r\n    </StyledInputWrapper>\r\n  )\r\n}\r\n\r\nconst StyledInputWrapper = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.input};\r\n  border-radius: ${(props) => props.theme.radii.default};\r\n  display: flex;\r\n  height: 72px;\r\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  background: none;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-size: 18px;\r\n  flex: 1;\r\n  height: 56px;\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: none;\r\n`\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js/bignumber'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\nimport Input, { InputProps } from '../Input'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  depositFeeBP?: number\r\n}\r\n\r\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\r\n  const TranslateString = useI18n()\r\n  return (\r\n    <StyledTokenInput>\r\n      <StyledMaxText>\r\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\r\n      </StyledMaxText>\r\n      <Input\r\n        endAdornment={\r\n          <StyledTokenAdornmentWrapper>\r\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n            <StyledSpacer />\r\n            <div>\r\n              <Button size=\"sm\" onClick={onSelectMax}>\r\n                {TranslateString(452, 'Max')}\r\n              </Button>\r\n            </div>\r\n          </StyledTokenAdornmentWrapper>\r\n        }\r\n        onChange={onChange}\r\n        placeholder=\"0\"\r\n        value={value}\r\n      />\r\n      {\r\n        depositFeeBP > 0 ?\r\n          <StyledMaxText>\r\n            {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP/10000).toString()} {symbol}\r\n          </StyledMaxText>\r\n          :\r\n          null\r\n      }\r\n\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.text};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.text};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TokenInput\r\n","import farmsConfig from './farms'\r\n\r\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\r\n\r\nexport { farmsConfig, communityFarms }\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useStake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        await stake(masterChefContract, 0, amount, account)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount, account)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, account)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStake\r\n","import { useContext } from 'react'\r\nimport { BlockContext } from 'contexts/BlockContext'\r\n\r\nconst useBlock = () => {\r\n  const block: number = useContext(BlockContext)\r\n  return block\r\n}\r\n\r\nexport default useBlock\r\n","import BigNumber from 'bignumber.js/bignumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(10)\r\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\nexport const CAKE_POOL_PID = 1\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\r\n\r\nconst NoFeeTag = () => (\r\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\r\n    No Fees\r\n  </Tag>\r\n)\r\n\r\nconst RiskTag = ({ risk }) => (\r\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\r\n    Risk {risk}\r\n  </Tag>\r\n)\r\n\r\nconst CoreTag = () => (\r\n  <Tag variant='secondary' outline startIcon={<VerifiedIcon />}>\r\n    Core\r\n  </Tag>\r\n)\r\n\r\nconst CommunityTag = () => (\r\n  <Tag variant='textSubtle' outline startIcon={<CommunityIcon />}>\r\n    Community\r\n  </Tag>\r\n)\r\n\r\nconst BinanceTag = () => (\r\n  <Tag variant='binance' outline startIcon={<BinanceIcon />}>\r\n    Binance\r\n  </Tag>\r\n)\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { ethers } from 'ethers'\r\nimport { useDispatch } from 'react-redux'\r\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\r\nimport { approve } from 'utils/callHelpers'\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, masterChefContract, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account }: { account: string } = useWallet()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account)\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account }: { account: string } = useWallet()\r\n  const cakeContract = useCake()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account)\r\n      return tx\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, cakeContract, lotteryContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\r\n  const { account } = useWallet()\r\n  const onApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await tokenContract.methods\r\n        .approve(spenderAddress, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n      return tx\r\n    } catch {\r\n      return false\r\n    }\r\n  }, [account, spenderAddress, tokenContract])\r\n\r\n  return onApprove\r\n}\r\n","import { useCallback } from 'react'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from 'state/actions'\r\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nconst useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account)\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n      console.info(txHash)\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\r\n\r\nexport const useSousUnstake = (sousId) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWallet()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const isOldSyrup = SYRUPIDS.includes(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      if (sousId === 0) {\r\n        const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        console.info(txHash)\r\n      } else if (isOldSyrup) {\r\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      } else {\r\n        const txHash = await sousUnstake(sousChefContract, amount, account)\r\n        console.info(txHash)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstake\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface LabelProps {\r\n  text?: string\r\n  isFinished?: boolean\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\r\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\r\n)\r\n\r\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\r\n  font-size: 14px;\r\n`\r\n\r\nexport default Label\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface TextProps {\r\n  isDisabled?: boolean\r\n  fontSize?: string\r\n  color?: string\r\n}\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value?: number\r\n  decimals?: number\r\n  unit?: string\r\n}\r\n\r\nconst StyledText = styled(Text)<TextProps>`\r\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\r\n`\r\n\r\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {value && unit && <span>{unit}</span>}\r\n    </StyledText>\r\n  )\r\n}\r\n\r\nBalance.defaultProps = {\r\n  fontSize: '32px',\r\n  isDisabled: false,\r\n  color: 'text',\r\n  decimals: 3,\r\n}\r\n\r\nexport default Balance\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport TokenInput from '../../../components/TokenInput'\r\nimport useI18n from '../../../hooks/useI18n'\r\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value)\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\r\n      <TokenInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport React, { useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport Balance from 'components/Balance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  earnings: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(earnings)\r\n  }, [earnings])\r\n\r\n  return (\r\n    <Modal\r\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <BalanceRow>\r\n        <Balance value={Number(fullBalance)} />\r\n      </BalanceRow>\r\n      <ModalActions>\r\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"compound-cake\"\r\n          fullWidth\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(fullBalance)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CompoundModal\r\n\r\nconst BalanceRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: row;\r\n`\r\n","import styled from 'styled-components'\r\n\r\ninterface StyledTitleProps {\r\n  isFinished?: boolean\r\n}\r\n\r\nconst CardTitle = styled.div<StyledTitleProps>`\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  line-height: 1.1;\r\n  margin-bottom: 14px;\r\n`\r\n\r\nexport default CardTitle\r\n","import styled from 'styled-components'\r\n\r\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\r\n  background: ${(props) => props.theme.card.background};\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  border-radius: 32px;\r\n  display: flex;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: ${({ isActive }) =>\r\n    isActive\r\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\r\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\r\n  flex-direction: column;\r\n  position: relative;\r\n`\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CardTitle from './CardTitle'\r\n\r\ninterface Props {\r\n  hasBalance?: boolean\r\n}\r\n\r\nconst Title = styled.div`\r\n  color: #ed4b9e;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n`\r\n\r\nconst ActionLink = styled.a`\r\n  color: #ed4b9e;\r\n  font-size: 14px;\r\n`\r\n\r\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\r\n  if (hasBalance) {\r\n    return (\r\n      <div>\r\n        <Title>Action Required</Title>\r\n        <ActionLink\r\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\r\n          target=\"_blank\"\r\n        >\r\n          What do I need to do?\r\n        </ActionLink>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CardTitle isFinished>FINISHED</CardTitle>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OldSyrupTitle\r\n","import React, { useContext, useMemo } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface ButtonProps {\r\n  children?: React.ReactNode\r\n  disabled?: boolean\r\n  href?: string\r\n  onClick?: () => void\r\n  size?: 'sm' | 'md' | 'lg'\r\n  text?: string\r\n  to?: string\r\n  variant?: 'default' | 'secondary' | 'tertiary'\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\r\n  const { colors, spacing } = useContext(ThemeContext)\r\n  const buttonColor = colors.background\r\n\r\n  let boxShadow: string\r\n  let buttonSize: number\r\n  let buttonPadding: number\r\n  let fontSize: number\r\n  switch (size) {\r\n    case 'sm':\r\n      buttonPadding = spacing[3]\r\n      buttonSize = 36\r\n      fontSize = 14\r\n      break\r\n    case 'lg':\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 72\r\n      fontSize = 16\r\n      break\r\n    case 'md':\r\n    default:\r\n      buttonPadding = spacing[4]\r\n      buttonSize = 56\r\n      fontSize = 16\r\n  }\r\n\r\n  const ButtonChild = useMemo(() => {\r\n    if (to) {\r\n      return <StyledLink to={to}>{text}</StyledLink>\r\n    }\r\n    if (href) {\r\n      return (\r\n        <StyledExternalLink href={href} target=\"__blank\">\r\n          {text}\r\n        </StyledExternalLink>\r\n      )\r\n    }\r\n    return text\r\n  }, [href, text, to])\r\n\r\n  return (\r\n    <StyledButton\r\n      boxShadow={boxShadow}\r\n      color={buttonColor}\r\n      disabled={disabled}\r\n      fontSize={fontSize}\r\n      onClick={onClick}\r\n      padding={buttonPadding}\r\n      size={buttonSize}\r\n    >\r\n      {children}\r\n      {ButtonChild}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\ninterface StyledButtonProps {\r\n  boxShadow: string\r\n  color: string\r\n  disabled?: boolean\r\n  fontSize: number\r\n  padding: number\r\n  size: number\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonProps>`\r\n  align-items: center;\r\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\r\n  border: 0;\r\n  border-radius: 12px;\r\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\r\n  cursor: pointer;\r\n  display: flex;\r\n  font-size: ${(props) => props.fontSize}px;\r\n  font-weight: 700;\r\n  height: ${(props) => props.size}px;\r\n  justify-content: center;\r\n  outline: none;\r\n  padding-left: ${(props) => props.padding}px;\r\n  padding-right: ${(props) => props.padding}px;\r\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\r\n  width: 100%;\r\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\r\n  width: 100px;\r\n  height: 30px;\r\n  font-size: 14px;\r\n  padding: 0px;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nconst StyledExternalLink = styled.a`\r\n  align-items: center;\r\n  color: inherit;\r\n  display: flex;\r\n  flex: 1;\r\n  height: 56px;\r\n  justify-content: center;\r\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\r\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\r\n  text-decoration: none;\r\n`\r\n\r\nexport default Button\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { ChevronDown, ChevronUp } from 'react-feather'\r\nimport Balance from 'components/Balance'\r\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\nconst tags = {\r\n  [PoolCategory.BINANCE]: BinanceTag,\r\n  [PoolCategory.CORE]: CoreTag,\r\n  [PoolCategory.COMMUNITY]: CommunityTag,\r\n}\r\n\r\ninterface Props {\r\n  projectLink: string\r\n  totalStaked: BigNumber\r\n  blocksRemaining: number\r\n  isFinished: boolean\r\n  blocksUntilStart: number\r\n  poolCategory: PoolCategory\r\n}\r\n\r\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\r\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\r\n  padding: 24px;\r\n`\r\n\r\nconst StyledDetailsButton = styled.button`\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: 0;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  height: 32px;\r\n  justify-content: center;\r\n  outline: 0;\r\n  padding: 0;\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  & > svg {\r\n    margin-left: 4px;\r\n  }\r\n`\r\n\r\nconst Details = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst FlexFull = styled.div`\r\n  flex: 1;\r\n`\r\nconst Label = styled.div`\r\n  font-size: 14px;\r\n`\r\nconst TokenLink = styled.a`\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  color: #12aab5;\r\n`\r\n\r\nconst CardFooter: React.FC<Props> = ({\r\n  projectLink,\r\n  totalStaked,\r\n  blocksRemaining,\r\n  isFinished,\r\n  blocksUntilStart,\r\n  poolCategory,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const Icon = isOpen ? ChevronUp : ChevronDown\r\n\r\n  const handleClick = () => setIsOpen(!isOpen)\r\n  const Tag = tags[poolCategory]\r\n\r\n  return (\r\n    <StyledFooter isFinished={isFinished}>\r\n      <Row>\r\n        <FlexFull>\r\n          <Tag />\r\n        </FlexFull>\r\n        <StyledDetailsButton onClick={handleClick}>\r\n          {isOpen ? 'Hide' : 'Details'} <Icon />\r\n        </StyledDetailsButton>\r\n      </Row>\r\n      {isOpen && (\r\n        <Details>\r\n          <Row style={{ marginBottom: '4px' }}>\r\n            <FlexFull>\r\n              <Label>\r\n                {TranslateString(408, 'Total')}\r\n              </Label>\r\n            </FlexFull>\r\n            {totalStaked === undefined ? \"Coming Soon\" :             <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />}\r\n          </Row>\r\n          {blocksUntilStart > 0 && (\r\n            <Row>\r\n              <FlexFull>\r\n                <Label>{TranslateString(410, 'Start')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\r\n            </Row>\r\n          )}\r\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\r\n            <Row>\r\n              <FlexFull>\r\n                <Label>{TranslateString(410, 'End')}:</Label>\r\n              </FlexFull>\r\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\r\n            </Row>\r\n          )}\r\n          <TokenLink href={projectLink} target=\"_blank\">\r\n            {TranslateString(412, 'View project site')}\r\n          </TokenLink>\r\n        </Details>\r\n      )}\r\n    </StyledFooter>\r\n  )\r\n}\r\n\r\nexport default React.memo(CardFooter)\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Label from 'components/Label'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useSousStake } from 'hooks/useStake'\r\nimport { useSousUnstake } from 'hooks/useUnstake'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useSousHarvest } from 'hooks/useHarvest'\r\nimport Balance from 'components/Balance'\r\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\nimport CompoundModal from './CompoundModal'\r\nimport CardTitle from './CardTitle'\r\nimport Card from './Card'\r\nimport OldSyrupTitle from './OldSyrupTitle'\r\nimport HarvestButton from './HarvestButton'\r\nimport CardFooter from './CardFooter'\r\n\r\ninterface PoolWithApy extends Pool {\r\n  apy: BigNumber\r\n}\r\n\r\ninterface HarvestProps {\r\n  pool: PoolWithApy\r\n}\r\n\r\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\r\n  const {\r\n    sousId,\r\n    image,\r\n    tokenName,\r\n    stakingTokenName,\r\n    stakingTokenAddress,\r\n    projectLink,\r\n    harvest,\r\n    apy,\r\n    tokenDecimals,\r\n    poolCategory,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    isFinished,\r\n    userData,\r\n    stakingLimit,\r\n    fee\r\n  } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const TranslateString = useI18n()\r\n  const stakingTokenContract = useERC20(stakingTokenAddress)\r\n  const { account } = useWallet()\r\n  const block = useBlock()\r\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\r\n  const { onStake } = useSousStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSousUnstake(sousId)\r\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const allowance = new BigNumber(userData?.allowance || 0)\r\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\r\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\r\n  const earnings = new BigNumber(userData?.pendingReward || 0)\r\n\r\n  const blocksUntilStart = Math.max(startBlock - block, 0)\r\n  const blocksRemaining = Math.max(endBlock - block, 0)\r\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\r\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\r\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\r\n  const isCardActive = isFinished && accountHasStakedBalance\r\n\r\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\r\n    />,\r\n  )\r\n\r\n  const [onPresentCompound] = useModal(\r\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\r\n  )\r\n\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  return (\r\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\r\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle isFinished={isFinished && sousId !== 0}>\r\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\r\n        </CardTitle>\r\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ flex: 1 }}>\r\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\r\n          </div>\r\n          <div>\r\n            {fee} fees\r\n          </div>\r\n\r\n          {account && harvest && !isOldSyrup && (\r\n            <HarvestButton\r\n              disabled={!earnings.toNumber() || pendingTx}\r\n              text={pendingTx ? 'Collecting' : 'Harvest'}\r\n              onClick={async () => {\r\n                setPendingTx(true)\r\n                await onReward()\r\n                setPendingTx(false)\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        {!isOldSyrup ? (\r\n          <BalanceAndCompound>\r\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\r\n            {sousId === 0 && account && harvest && (\r\n              <HarvestButton\r\n                disabled={!earnings.toNumber() || pendingTx}\r\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\r\n                onClick={onPresentCompound}\r\n              />\r\n            )}\r\n          </BalanceAndCompound>\r\n        ) : (\r\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\r\n        )}\r\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\r\n        <StyledCardActions>\r\n          {!account && <UnlockButton />}\r\n          {account &&\r\n            (needsApproval && !isOldSyrup ? (\r\n              <div style={{ flex: 1 }}>\r\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\r\n                  {`Approve ${stakingTokenName}`}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\r\n                  onClick={\r\n                    isOldSyrup\r\n                      ? async () => {\r\n                          setPendingTx(true)\r\n                          await onUnstake('0')\r\n                          setPendingTx(false)\r\n                        }\r\n                      : onPresentWithdraw\r\n                  }\r\n                >\r\n                  {`Unstake ${stakingTokenName}`}\r\n                </Button>\r\n                <StyledActionSpacer />\r\n                {!isOldSyrup && (\r\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\r\n                    <AddIcon color=\"background\" />\r\n                  </IconButton>\r\n                )}\r\n              </>\r\n            ))}\r\n        </StyledCardActions>\r\n        {/* <StyledDetails>\r\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\r\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\r\n            '-'\r\n          ) : (\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\r\n          )}\r\n        </StyledDetails> */}\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>\r\n            {TranslateString(384, 'Your Stake')}:\r\n          </div>\r\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\r\n        </StyledDetails>\r\n      </div>\r\n      <CardFooter\r\n        projectLink={projectLink}\r\n        totalStaked={totalStaked}\r\n        blocksRemaining={blocksRemaining}\r\n        isFinished={isFinished}\r\n        blocksUntilStart={blocksUntilStart}\r\n        poolCategory={poolCategory}\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst PoolFinishedSash = styled.div`\r\n  background-image: url('/images/pool-finished-sash.svg');\r\n  background-position: top right;\r\n  background-repeat: not-repeat;\r\n  height: 135px;\r\n  position: absolute;\r\n  right: -24px;\r\n  top: -24px;\r\n  width: 135px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 16px 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n`\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst PoolTabButtons = () => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {TranslateString(999, 'Active')}\r\n        </ButtonMenuItem>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {TranslateString(999, 'Inactive')}\r\n        </ButtonMenuItem>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-bottom: 32px;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import React from 'react'\r\nimport { Route, useRouteMatch } from 'react-router-dom'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Heading } from '@pancakeswap-libs/uikit'\r\nimport { BLOCKS_PER_YEAR } from 'config'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\r\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport Coming from './components/Coming'\r\nimport PoolCard from './components/PoolCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport Divider from './components/Divider'\r\n\r\nconst Farm: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const farms = useFarms()\r\n  const pools = usePools(account)\r\n  const bnbPriceUSD = usePriceBnbBusd()\r\n  const block = useBlock()\r\n\r\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\r\n    const tokenPriceBN = new BigNumber(tokenPrice)\r\n    if (tokenName === 'BNB') {\r\n      return new BigNumber(1)\r\n    }\r\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\r\n      return tokenPriceBN.div(bnbPriceUSD)\r\n    }\r\n    return tokenPriceBN\r\n  }\r\n\r\n  const poolsWithApy = pools.map((pool) => {\r\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\r\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\r\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\r\n\r\n    // /!\\ Assume that the farm quote price is BNB\r\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\r\n    const rewardTokenPriceInBNB = priceToBnb(\r\n      pool.tokenName,\r\n      rewardTokenFarm?.tokenPriceVsQuote,\r\n      rewardTokenFarm?.quoteTokenSymbol,\r\n    )\r\n\r\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\r\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n\r\n    return {\r\n      ...pool,\r\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\r\n      apy,\r\n    }\r\n  })\r\n\r\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\r\n\r\n  return (\r\n    <Page>\r\n      <Hero>\r\n        <div>\r\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\r\n            {TranslateString(282, 'AstroFarms Vaults')}\r\n          </Heading>\r\n          <Heading>\r\n            <li>{TranslateString(581, 'Stake AstroProtocol to earn new tokens.')}</li>\r\n            <li>{TranslateString(404, 'You can unstake at any time.')}</li>\r\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\r\n          </Heading>\r\n        </div>\r\n        <img src=\"/images/IMG_1050.svg\" alt=\"SYRUP POOL icon\" width={410} height={191} />\r\n      </Hero>\r\n      <PoolTabButtons />\r\n      <Divider />\r\n      <FlexLayout>\r\n        <Route exact path={`${path}`}>\r\n          <>\r\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\r\n              <PoolCard key={pool.sousId} pool={pool} />\r\n            ))}\r\n            {/* <Coming /> */}\r\n          </>\r\n        </Route>\r\n        <Route path={`${path}/history`}>\r\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\r\n            <PoolCard key={pool.sousId} pool={pool} />\r\n          ))}\r\n        </Route>\r\n      </FlexLayout>\r\n    </Page>\r\n  )\r\n}\r\n\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: 1fr;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 250px;\r\n  padding: 48px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  img {\r\n    height: auto;\r\n    max-width: 100%;\r\n  }\r\n  @media (min-width: 576px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n`\r\n\r\nexport default Farm\r\n"],"sourceRoot":""}